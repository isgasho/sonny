
This grammar is not quite complete. There are some keywords missing, and a few things might not be coded exactly to match what is listed here.
TODO: Clean up the grammar and make it a clearer mormat.


digit -> [0,9]

letter -> [a,z] | [A,Z]

num -> digit num
	| digit

pitch_letter -> [A,G]

accidental -> # | b | \0

octave -> digit | \0

real -> num
	| num .
	| num . num
	| pi

note_notation -> pitch_letter accidental octave

pitch -> note_notation
	| real
	| _

dots -> . dots
	| \0

easy_duration -> w dots
	| h dots
	| q dots
	| e dots
	| s dots
	| ts dots

duration -> num / num
	| real
	| easy_duration

note -> pitch : duration
	| pitch : id

notes -> note , notes
	| \0

alpha_num_us -> letter | digit | _

id_chars -> alpha_num_us id_chars
	| alpha_num_us
	| \0

id -> letter id_chars
	| _ id_chars

built_in -> start | end

global -> time | window_size | sample_rate

backlink -> ! num

indexer -> [expression]
	| [expression..expression]

term_identifier -> real
	| global
	| id
	| backlink
	| note
	| |chain_declaration|
	| ( expression )

term -> term
	| term indexer

exp_un -> - term
	| sin term
	| cos term
	| floor term
	| ceil term
	| abs term
	| log term
	| term

exp_min_max -> exp_un min exp_min_max
	| exp_un max exp_min_max
	| exp_un

exp_pow -> exp_min_max ^ exp_pow
	| log exp_pow
	| exp_min_max

exp_mul -> exp_pow * exp_mul
	| exp_pow / exp_mul
	| exp_pow % exp_mul
	| exp_pow

exp_add -> exp_mul + exp_add
	| exp_mul - exp_add
	| exp_mul

exp_cmp -> exp_add == exp_cmp
	| exp_add != exp_cmp
	| exp_add < exp_cmp
	| exp_add > exp_cmp
	| exp_add <= exp_cmp
	| exp_add >= exp_cmp
	| exp_add

exp_and -> exp_cmp && exp_and
	| exp_cmp

exp_or -> exp_cmp && exp_or
	| exp_cmp

exp_tern -> exp_or ? exp_tern : exp_tern
	| exp_or

expression -> exp_tern

link -> expression
	| { notes }

chain -> link -> chain
	| link
	| out

chain_declaration -> id : chain
	| chain
